import pprint
import json

from matcher import Tagger
from dbinterface import DBInterface
from dbinterface.consts import *

LIMIT = 10

GET_TAGS_CMD = 'SELECT * FROM public.tags;'
GET_ARTICLES_CMD = 'SELECT * FROM public."Articles" ' \
                   'LIMIT {};'.format(LIMIT)

NGRAMS = (1, 2, 3)
WINDOW_WIDTH = 1200

TO_EXCLUDE = {'approach', 'application'}

if __name__ == '__main__':

    urls_tags = {
        'https://medium.com/s/story/spotifys-discover-weekly-how-machine-learning-finds-your-new-music-19a41ab76efe': {},
        'https://blog.openai.com/language-unsupervised/': {}}

    # Initialize DBInterface with appropriate databases
    db = DBInterface(dbname=DBNAME, user=USER, password=PASSWORD, host=HOST, port=PORT)

    # Get tags id and name from database
    db.execute(GET_TAGS_CMD)
    tags = db.fetchall()

    # Initialize Tagger with parameters
    tagger = Tagger(tags=tags, to_exclude=TO_EXCLUDE, ngrams=NGRAMS, window_width=WINDOW_WIDTH)

    # Execute command to get articles
    db.execute(GET_ARTICLES_CMD)

    for _ in range(LIMIT):
        # Get all available data about article
        id, source_id, url, status, html, pub_date, content = db.fetchone()

        # Transform json-string to dictionary
        content = json.loads(content)

        tagger.parse(url)
        content["summary"] = tagger.summarize()
        content["timeToRead"], _ = tagger.estimate()
        tags_from_text = tagger(url=url)
        if content["tags"]:
            content["tags"].append(tags_from_text)
        else:
            content["tags"] = tags_from_text
